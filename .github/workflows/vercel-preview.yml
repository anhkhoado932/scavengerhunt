name: Vercel Preview Deployment
on:
  pull_request:
    branches:
      - main

jobs:
  check-author:
    runs-on: ubuntu-latest
    outputs:
      is-authorized: ${{ steps.check.outputs.is-authorized }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Check PR author
        id: check
        run: |
          # Get PR author using GitHub API
          PR_AUTHOR=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
            | jq -r '.user.login')
          
          echo "PR author: $PR_AUTHOR"
          
          if [[ "$PR_AUTHOR" == "your-github-username" ]]; then
            echo "is-authorized=true" >> $GITHUB_OUTPUT
          else
            echo "is-authorized=false" >> $GITHUB_OUTPUT
          fi

  deploy-preview:
    needs: check-author
    if: needs.check-author.outputs.is-authorized == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "Preview deployed to: $DEPLOYMENT_URL"
          echo "VERCEL_DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV
      
      - name: Add Comment to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `âœ… Preview deployed to: ${ process.env.VERCEL_DEPLOYMENT_URL }`
            }); 